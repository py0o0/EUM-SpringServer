server:
  port: 8080

spring:
  application:
    name: information

  config:
    import: optional:file:.env[.properties]

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USER}
    password: ${DB_PASSWORD}

  kafka:
    bootstrap-servers: ${KAFKA_URL}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: earliest
      group-id: eum
    listener:
      missing-topics-fatal: false

translation:
  api-key: ${TRANSLATION_KEY}

jwt:
  token:
    secret: ${JWT_SECRET}
  access-token-expiration: ${JWT_ACCESS_EXPIRATION}
  refresh-token-expiration: ${JWT_REFRESH_EXPIRATION}

cloud:
  aws:
    credentials:
      accessKey: ${S3_ACCESS_KEY}
      secretKey: ${S3_SECRET_KEY}
    region:
      static: ${S3_REGION}
    s3:
      bucketName: ${S3_BUCKET_NAME}

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_IP}


ai:
  url: ${AI_IP}