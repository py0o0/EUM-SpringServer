plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2024.0.0")
}

dependencies {
    // Spring Boot WebFlux (Gateway 기반)
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    // Spring Cloud Gateway
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
    // Eureka Client (서비스 디스커버리)
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    // Spring Security (JWT 필터용)
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // JWT 파싱/검증 라이브러리
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly   'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly   'io.jsonwebtoken:jjwt-jackson:0.12.3'

    // 운영 편의
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // 테스트
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'

    //sql
    //implementation 'mysql:mysql-connector-java:8.0.28'

   // implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

}


dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}